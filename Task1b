#ifdef __APPLE__
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif

#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int x1g, y1g, x2g, y2g; // global 
int W;                  // line thickness 

void draw_thick_pixel(int x, int y, int widthPx) {
    int half = widthPx / 2; // integer division

    glBegin(GL_POINTS);
    for (int dy = -half; dy <= half; dy++) {
        for (int dx = -half; dx <= half; dx++) {
            glVertex2i(x + dx, y + dy);
        }
    }
    glEnd();
}

// Bresenham line algo for line thickness
void draw_line_thick(int x1, int y1, int x2, int y2, int widthPx) {
    int dx, dy, i, e;
    int incx, incy, inc1, inc2;
    int x, y;

    dx = x2 - x1;
    dy = y2 - y1;

    if (dx < 0) dx = -dx;
    if (dy < 0) dy = -dy;

    incx = 1;
    if (x2 < x1) incx = -1;
    incy = 1;
    if (y2 < y1) incy = -1;

    x = x1;
    y = y1;

    if (dx > dy) {
                // initial pixel
        draw_thick_pixel(x, y, widthPx);

        e = 2 * dy - dx;
        inc1 = 2 * (dy - dx);
        inc2 = 2 * dy;

        for (i = 0; i < dx; i++) {
            if (e >= 0) {
                y += incy;
                e += inc1;
            } else {
                e += inc2;
            }
            x += incx;

            draw_thick_pixel(x, y, widthPx);
        }
    } else {
        
        draw_thick_pixel(x, y, widthPx);

        e = 2 * dx - dy;
        inc1 = 2 * (dx - dy);
        inc2 = 2 * dx;

        for (i = 0; i < dy; i++) {
            if (e >= 0) {
                x += incx;
                e += inc1;
            } else {
                e += inc2;
            }
            y += incy;

            draw_thick_pixel(x, y, widthPx);
        }
    }
}


void myInit() {
    glClearColor(0.0, 0.0, 0.0, 1.0);   
    glClear(GL_COLOR_BUFFER_BIT);

    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(0, 500, 0, 500);

    // point size 1 
    glPointSize(1.0f);

    // draw in white 
    glColor3f(1.0f, 1.0f, 1.0f);
}

void myDisplay() {
    glClear(GL_COLOR_BUFFER_BIT);

    // thick line drawing
    draw_line_thick(x1g, y1g, x2g, y2g, W);

    glFlush();
}


int main(int argc, char **argv) {

    printf("Enter x1 y1 x2 y2:\n");
    scanf("%d %d %d %d", &x1g, &y1g, &x2g, &y2g);

    printf("Enter line thickness W (e.g. 1, 3, 5):\n");
    scanf("%d", &W);

    if (W < 1) W = 1; // minimum thickness is 1 

    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(500, 500);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("Thick Bresenham Line");

    myInit();
    glutDisplayFunc(myDisplay);

    glutMainLoop();
    return 0;
}
